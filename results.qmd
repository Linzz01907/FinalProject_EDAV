# Results

```{r}
library(tidyverse)
salary_df <- read.csv("Cleaned Dataset.csv")
```

```{r}
select_agency <- salary_df |> 
  filter(Agency.Name == c('DEPT OF ED PEDAGOGICAL','POLICE DEPARTMENT',
'FIRE DEPARTMENT',
'HRA/DEPT OF SOCIAL SERVICES',
'NYC HOUSING AUTHORITY',
 'DEPARTMENT OF SANITATION',
"ADMIN FOR CHILDREN'S SVCS",
'DEPARTMENT OF FINANCE',
'DEPT OF INFO TECH & TELECOMM',
'TAXI & LIMOUSINE COMMISSION'))
select_agency
```
```{r}
select_title <- select_agency |>  
  filter(Title.Description %in% c("CHILD PROTECTIVE SPECIALIST",
                                  "CHILD PROTECTIVE SPECIALIST SUPERVISOR",
                                  "CITY TAX AUDITOR",
                                  "CLERICAL ASSOCIATE",
                                  "CALL CENTER REPRESENTATIVE",
                                  "COMPUTER SPECIALIST",
                                  "TAXI AND LIMOUSINE INSPECTOR",
                                  "COMMUNITY ASSOCIATE",
                                  "TEACHER",
                                  "TEACHER SPECIAL EDUCATION",
                                  "POLICE OFFICER",
                                  "SCHOOL SAFETY AGENT",
                                  "FIREFIGHTER",
                                  "EMERGENCY MEDICAL SPECIALIST-EMT",
                                  "ELIGIBILITY SPECIALIST",
                                  "JOB OPPORTUNITY SPECIALIST",
                                  "CARETAKER",
                                  "MAINTENANCE WORKER",
                                  "SANITATION WORKER",
                                  "CITY SEASONAL AIDE"))
```

```{r Salary Level}
library(dplyr)
df <- select_title |>  
  mutate(AnnualSalary = case_when(
    Pay.Basis == "per Annum" ~ 1,
    Pay.Basis == "per Day" ~ 260,
    Pay.Basis == "per Hour" ~ 260 * 8,
    Pay.Basis == "Prorated Annual" ~ 1
  ))

salary_new <- df |> 
  mutate(AnnualSalary = AnnualSalary * Base.Salary)

fivenum(salary_new$AnnualSalary)
# 6461  58692  80788  95105 143858

salary_new <- salary_new |>
  mutate(SalaryLevel = case_when(
    AnnualSalary >= 6461 & AnnualSalary <= 58692 ~ "LOW",
    AnnualSalary > 58692 & AnnualSalary <= 80788 ~ "MOD",
    AnnualSalary > 80788 & AnnualSalary <= 95105 ~ "HIGH",
    AnnualSalary > 95105 & AnnualSalary <= 143858 ~ "VHIGH"))

```
```{r Agency Start Time}


salary_new$Agency.Start.Date <- trimws(salary_new$Agency.Start.Date)
salary_new$Agency.Start.Date <- as.Date(salary_new$Agency.Start.Date, format="%m/%d/%Y")
salary_new$CorrentDate <- as.Date("2023-12-01")

salary_new$Agency.Start.Date[salary_new$Agency.Start.Date == as.Date("9999-12-31")] <- as.Date("1999-12-31")

salary_new$days_difference <- as.Date(salary_new$CorrentDate) - as.Date(salary_new$Agency.Start.Date)
salary_new$days_difference <- as.numeric(salary_new$days_difference)
```

```{r total pay_per_hour and agency_size}

# View(salary_new)
salary_new$OT.Hours[salary_new$OT.Hours<0]<-0
# salary_new$Regular.Hours[salary_new$Regular.Hours<0]<-0
salary_new$pay_per_hour<-salary_new$Total.OT.Paid/salary_new$OT.Hours
salary_new$pay_per_hour[is.infinite(salary_new$pay_per_hour)| is.na(salary_new$pay_per_hour)] <- 0 
salary_new$job_type <- ifelse(as.numeric(salary_new$Regular.Hours) <= 1000 & as.numeric(salary_new$Regular.Hours) > 0, "part_time", "full_time")

agency_size <- as.data.frame(table(salary_new$Agency.Name))
colnames(agency_size) <- c("Agency.Name", "Agency.Size")
salary <- left_join(salary_new, agency_size, by = join_by(Agency.Name))
```

```{r}
count_by_columnB <- salary %>%
  group_by(job_type) %>%
  summarise(Count = n())
print(count_by_columnB)
```
  
  
  
  
```{r Correlation Heatmap Plot}
# library(dplyr)
library(GGally)
p <- salary_new[, c(2, 4:6, 8, 15)]
library(ggcorrplot)
model.matrix(~0+., data=p) %>%
  cor(use="pairwise.complete.obs") %>%
  ggcorrplot(show.diag=FALSE, type="lower", lab=FALSE, lab_size=2)+
  theme(axis.text.x = element_text(size = 5),  # Adjust size as needed for x axis labels
        axis.text.y = element_text(size = 5))
# p <- salary_new[, c(2, 4:6, 8, 15)]
# ggparcoord(p, columns=1:6)
```

```{r Lollipop}
library(gridExtra)
q <- salary_new[, c(2, 5, 14)]
mean_salary_agency <- q %>%
    group_by(Agency.Name) %>%
    summarise(mean_value_agency = mean(AnnualSalary, na.rm = TRUE))

mean_salary_title <- q %>%
    group_by(Title.Description) %>%
    summarise(mean_value_title = mean(AnnualSalary, na.rm = TRUE))

p1 <- ggplot(mean_salary_agency, aes(x=Agency.Name, y=mean_value_agency)) +
  geom_segment( aes(x=Agency.Name, xend=Agency.Name, y=0, yend=mean_value_agency)) +
  geom_point( size=5, color="red", fill=alpha("orange", 0.3), alpha=0.7, shape=21, stroke=2)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

p2 <- ggplot(mean_salary_title, aes(x=Title.Description, y=mean_value_title)) +
  geom_segment( aes(x=Title.Description, xend=Title.Description, y=0, yend=mean_value_title)) +
  geom_point( size=5, color="red", fill=alpha("orange", 0.3), alpha=0.7, shape=21, stroke=2)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

if (!requireNamespace("gridExtra", quietly = TRUE)) {
    install.packages("gridExtra")
}
grid.arrange(p1, p2, ncol = 2, widths = c(1, 1))
```


```{r Scattor Pair Plot}
ggpairs(select(salary, Agency.Size, days_difference, AnnualSalary), 
        mapping = ggplot2::aes(alpha = 0.5),
        lower = list(continuous = wrap("points", size = 0.1)))
```


```{r Time Series}

```



```{r}
library(ggplot2)
ggplot(salary, aes(x = Agency.Name, y = OT.Hours)) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Box Plot of OT.Hours across Different Agencies",
       x = "Agency Name",
       y = "OT Hours")

ggplot(salary, aes(x = Title.Description, y = OT.Hours)) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Box Plot of OT.Hours across Different Titles",
       x = "Title Description",
       y = "OT Hours")



ggplot(salary, aes(x = Agency.Name, y = Total.OT.Paid)) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Box Plot of Total.OT.Paid across Different Agencies",
       x = "Agency Name",
       y = "OT Hours")

ggplot(salary, aes(x = Title.Description, y = Total.OT.Paid)) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Box Plot of Total.OT.Paid across Different Titles",
       x = "Title Description",
       y = "OT Hours")


# ANOVA for Agency.Name and OT.Hours
anova_agency <- aov(OT.Hours ~ Agency.Name, data = salary)
summary(anova_agency)

# ANOVA for Title.Description and OT.Hours
anova_title <- aov(OT.Hours ~ Title.Description, data = salary)
summary(anova_title)


# ANOVA for Agency.Name and Total.OT.Paid
anova_agency <- aov(Total.OT.Paid ~ Agency.Name, data = salary)
summary(anova_agency)

# ANOVA for Title.Description and Total.OT.Paid
anova_title <- aov(Total.OT.Paid ~ Title.Description, data = salary)
summary(anova_title)

```


```{r parallell}
library(GGally)
ggparcoord(salary,
           columns = c(11,18,17),  groupColumn = 5,
           scale='globalminmax',
           title = "Parallel Coordinate Plot for salary Data",
           alphaLines = 0.6)
```
